<?xml version="1.0"?>
<!--
  ~ ELASTICSEARCH CONFIDENTIAL
  ~ __________________
  ~
  ~  [2014] Elasticsearch Incorporated. All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Elasticsearch Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Elasticsearch Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is strictly forbidden unless prior written permission is obtained
  ~ from Elasticsearch Incorporated.
  -->

<project name="shield-example-realm"
         xmlns:ac="antlib:net.sf.antcontrib">

  <import file="${elasticsearch.integ.antfile.default}"/>

  <!-- redefined to work with auth -->
  <macrodef name="waitfor-elasticsearch">
      <attribute name="port"/>
      <attribute name="timeoutproperty"/>
    <sequential>
      <echo>Waiting for elasticsearch to become available on port @{port}...</echo>
      <waitfor maxwait="30" maxwaitunit="second"
               checkevery="500" checkeveryunit="millisecond"
               timeoutproperty="@{timeoutproperty}">
        <socket server="127.0.0.1" port="@{port}"/>
      </waitfor>
    </sequential>
  </macrodef>

  <target name="start-external-cluster-with-plugin" depends="setup-workspace">
    <!-- install elasticsearch plugin dependencies -->
    <ac:for list="${plugin.dependencies.list}" param="plugin.name">
      <sequential>
        <fail message="Expected @{plugin.dependencies.list}-${elasticsearch.version}.zip as a dependency, but could not be found in ${integ.deps}/plugins}">
          <condition>
            <not>
              <available file="${integ.deps}/plugins/@{plugin.name}-${elasticsearch.version}.zip" />
            </not>
          </condition>
        </fail>
      </sequential>
    </ac:for>
    <ac:for list="${plugin.dependencies.list}" param="plugin.name">
      <sequential>
        <install-plugin name="@{plugin.name}" file="${integ.deps}/plugins/@{plugin.name}-${elasticsearch.version}.zip"/>
      </sequential>
    </ac:for>

    <!-- install this project's plugin -->
    <fail message="Expected ${integ.deps}/plugins/${project.artifactId}-${project.plugin.version}.zip, but could not be found}">
      <condition>
        <not>
          <available file="${integ.deps}/plugins/${project.artifactId}-${project.plugin.version}.zip" />
        </not>
      </condition>
    </fail>
    <install-plugin name="${project.artifactId}" file="${integ.deps}/plugins/${project.artifactId}-${project.plugin.version}.zip"/>

    <local name="home"/>
    <property name="home" location="${integ.scratch}/elasticsearch-${elasticsearch.version}"/>

    <echo>Adding shield users...</echo>
    <run-script script="${home}/bin/shield/esusers">
      <nested>
        <arg value="useradd"/>
        <arg value="admin_user"/>
        <arg value="-p"/>
        <arg value="changeme"/>
        <arg value="-r"/>
        <arg value="admin"/>
      </nested>
    </run-script>

    <fail message="Expected ${project.build.testOutputDirectory}/oauth_role_mapping.yml, but could not be found, try 'mvn test-compile' first}">
      <condition>
        <not>
          <available file="${project.build.testOutputDirectory}/oauth_role_mapping.yml" />
        </not>
      </condition>
    </fail>
    <copy file="${project.build.testOutputDirectory}/oauth_role_mapping.yml" todir="${home}/config/shield/" />

    <startup-elasticsearch>
      <additional-args>
        <arg value="-Des.shield.authc.realms.oauth-integ.order=0"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.type=oauth"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.files.role_mapping=config/shield/oauth_role_mapping.yml"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.token-info.url=http://localhost:${idp.server.port}/nidp/oauth/nam/tokeninfo"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.idp.connection-timeout-in-millis=10000"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.idp.read-timeout-in-millis=10000"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.idp.write-timeout-in-millis=10000"/>
        <!--<arg value="-Des.shield.authc.realms.oauth-integ.idp.proxy.host=..."/>-->
        <!--<arg value="-Des.shield.authc.realms.oauth-integ.idp.proxy.port=..."/>-->
        <!--<arg value="-Des.shield.authc.realms.oauth-integ.idp.proxy.username=..."/>-->
        <!--<arg value="-Des.shield.authc.realms.oauth-integ.idp.proxy.password=..."/>-->
        <arg value="-Des.shield.authc.realms.oauth-integ.token-info.field.user=user_id"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.token-info.field.scope=scope"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.token-info.field.expires-in=expires_in"/>
        <arg value="-Des.shield.authc.realms.oauth-integ.token-info.field.expires-in.unit=SECONDS"/>
        <arg value="-Des.shield.audit.enabled=true"/>
        <arg value="-Des.logger.shield.audit.logfile=DEBUG,access_log"/>
        <arg value="-Des.shield.authc.realms.esusers.order=1"/>
        <arg value="-Des.shield.authc.realms.esusers.type=esusers"/>
      </additional-args>
    </startup-elasticsearch>

    <echo>Checking we can connect with basic auth on port ${integ.http.port}...</echo>
    <local name="temp.file"/>
    <tempfile property="temp.file" destdir="${java.io.tmpdir}"/>
    <get src="http://127.0.0.1:${integ.http.port}" dest="${temp.file}"
         username="admin_user" password="changeme" verbose="true" retries="10"/>
  </target>
</project>
